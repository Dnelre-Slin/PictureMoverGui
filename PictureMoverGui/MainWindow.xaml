<Window x:Class="PictureMoverGui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:properties="clr-namespace:PictureMoverGui.Properties"
        xmlns:local="clr-namespace:PictureMoverGui"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="MainWindow" Height="500" Width="800" MinHeight="500" MinWidth="800">
    <Window.Resources>
        <local:PictureMoverModel x:Key="moverModel"></local:PictureMoverModel>
    </Window.Resources>
    <TabControl>
        <TabItem Header="{DynamicResource TabNormalView}">
            <local:SorterView DataContext="{Binding Source={StaticResource moverModel}}"></local:SorterView>
            <!--<Grid Margin="0 20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition Height="45"></RowDefinition>
                    <RowDefinition/>
                    <RowDefinition Height="2*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <WrapPanel HorizontalAlignment="Center" DockPanel.Dock="Top" Grid.Row="0" VerticalAlignment="Center">
                        <Label FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{DynamicResource SourceLabelContent}"/>
                        <Button Width="150" Height="40" FontSize="20" Margin="30 0 5 0" x:Name="btnChooseSourceDir" Click="btnChooseSourceDir_Click" Content="{DynamicResource FolderButtonContent}" IsEnabled="{Binding AllowGatherInfoDir}"/>
                        <Button Visibility="{Binding GatherDirInfoCancelButtonVisibility}" Width="40" Height="40" FontSize="20" x:Name="btnChooseSourceDirCancel" Click="btnChooseSourceDirCancel_Click" Content="{DynamicResource CancelContent}"/>
                    </WrapPanel>
                    <Label x:Name="SourceDirLabel" FontSize="20" Background="GhostWhite" Content="{Binding labelSourceDirContent}" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
                <Grid Grid.Row="1">
                    <Button FontSize="40" Padding="-40" Width="40" Height="40" x:Name="btnSwapSourceDestination" Click="btnSwapSourceDestination_Click" Content="{DynamicResource SwapSourceDestinationContent}" IsEnabled="{Binding AllowSwapOperation}" />
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <WrapPanel HorizontalAlignment="Center" DockPanel.Dock="Top" Grid.Row="0" VerticalAlignment="Center">
                        <Label FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{DynamicResource DestinationLabelContent}"/>
                        <Button Width="150" Height="40" FontSize="20" Margin="30 0" x:Name="btnChooseDestinationDir" Click="btnChooseDestinationDir_Click" Content="{DynamicResource FolderButtonContent}" IsEnabled="{Binding AllowConfigationButtons}"/>
                    </WrapPanel>
                    <Label x:Name="DestinationDirLabel" Background="GhostWhite" FontSize="20" Content="{Binding labelDestinationDirContent}" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
                <Grid Grid.Row="3" Margin="20,20,20,20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Viewbox Height="80" Grid.Column="0">
                        <WrapPanel Orientation="Vertical">
                            <CheckBox x:Name="chkboxDoCopy" IsChecked="{Binding chkboxDoCopyChecked}" Content="{DynamicResource chkboxDoCopy}" IsEnabled="{Binding AllowConfigationButtons}"/>
                            <CheckBox x:Name="chkboxDoStructured" IsChecked="{Binding chkboxDoStructuredChecked}"  Content="{DynamicResource chkboxDoStructured}" IsEnabled="{Binding AllowConfigationButtons}"/>
                            <CheckBox x:Name="chkboxDoRename" IsChecked="{Binding chkboxDoRenameChecked}" Content="{DynamicResource chkboxDoRename}" IsEnabled="{Binding AllowConfigationButtons}"/>
                        </WrapPanel>
                    </Viewbox>
                    <DockPanel Width="250" Grid.Column="1">
                        <Button Margin="50 0 0 0" Width="150" Height="40" FontSize="20" x:Name="btnStart"  Click="btnStart_Click" Content="{DynamicResource StartButtonContent}" IsEnabled="{Binding AllowStartingMover}" />
                        <Button Visibility="{Binding StartSorterCancelButtonVisibility}" Width="40" Height="40" FontSize="20" x:Name="btnStartCancel" Click="btnStartCancel_Click" Content="{DynamicResource CancelContent}" />
                    </DockPanel>
                    <Grid Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Label Width="150" Height="40" HorizontalContentAlignment="Center" FontSize="20" x:Name="statusMessage" Content="{Binding StatusMessageContent}"/>
                        <ed:Arc x:Name="ProgressBarArc" Fill="CornflowerBlue" Height="70" Width="70" Stretch="None" ArcThickness="8" ArcThicknessUnit="Pixel" EndAngle="{Binding ArcEndAngle}" />
                    </Grid>
                </Grid>
            </Grid>-->  
        </TabItem>
        <TabItem Header="{DynamicResource TabExtensionView}">
            <local:ExtensionSelectorView DataContext="{Binding Source={StaticResource moverModel}}"></local:ExtensionSelectorView>
            <!--<Grid>
                <ScrollViewer Margin="30" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                    <ListView 
                        Name="ListCustomer"
                        ItemsSource="{Binding extensionInfoList}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Viewbox Height="25">
                                    <CheckBox Content="{Binding Name}" IsChecked="{Binding Active}"></CheckBox>
                                </Viewbox>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </ScrollViewer>
            </Grid>-->
        </TabItem>
        <TabItem Header="Advanced">
            <local:AdvancedOptionsView DataContext="{Binding Source={StaticResource moverModel}}"></local:AdvancedOptionsView>
            <!--<Grid>
                <WrapPanel>
                    <WrapPanel Width="800">
                        <Viewbox Height="60" Margin="10">
                            <WrapPanel Orientation="Vertical">
                                <RadioButton GroupName="NameCollision" IsChecked="{Binding nameCollisionAction, Converter={StaticResource enumConverter}, ConverterParameter={x:Static local:NameCollisionActionEnum.SkipFile}}" Content="Skip file"></RadioButton>
                                <RadioButton GroupName="NameCollision" IsChecked="{Binding nameCollisionAction, Converter={StaticResource enumConverter}, ConverterParameter={x:Static local:NameCollisionActionEnum.NrAppend}}" Content="Append number"></RadioButton>
                                <RadioButton GroupName="NameCollision" IsChecked="{Binding nameCollisionAction, Converter={StaticResource enumConverter}, ConverterParameter={x:Static local:NameCollisionActionEnum.CompareFiles}}" Content="Compare files"></RadioButton>
                            </WrapPanel>
                        </Viewbox>
                        <Viewbox Height="60">
                            <WrapPanel Orientation="Vertical">
                                <RadioButton GroupName="CompareFiles" IsChecked="{Binding compareFilesAction, Converter={StaticResource enumConverter}, ConverterParameter={x:Static local:CompareFilesActionEnum.NameAndDateOnly}}" Content="Name and date only"></RadioButton>
                                <RadioButton GroupName="CompareFiles" IsChecked="{Binding compareFilesAction, Converter={StaticResource enumConverter}, ConverterParameter={x:Static local:CompareFilesActionEnum.MD5}}" Content="Name, date and MD5"></RadioButton>
                                <RadioButton GroupName="CompareFiles" IsChecked="{Binding compareFilesAction, Converter={StaticResource enumConverter}, ConverterParameter={x:Static local:CompareFilesActionEnum.SHA256}}" Content="Name, date and SHA256"></RadioButton>
                            </WrapPanel>
                        </Viewbox>
                        <Button Width="100" Height="30" FontSize="20" Margin="10" Content="Test" x:Name="btnTestOutput" Click="btnTestOutput_Click"></Button>
                    </WrapPanel>
                </WrapPanel>
            </Grid>-->
        </TabItem>
        <TabItem Header="Events">
            <local:EventListView DataContext="{Binding Source={StaticResource moverModel}}"></local:EventListView>
            <!--<Grid>
                <ScrollViewer Margin="30" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                    <ListView 
                            Name="Bist"
                            ItemsSource="{Binding eventDataList}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid MinHeight="30" MinWidth="700">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Width="140" Grid.Column="0" Visibility="{Binding ShowNormalView}" Text="{Binding Name}"></TextBlock>
                                    <TextBox Width="140"  Grid.Column="0" Visibility="{Binding ShowEditableView}" Text="{Binding Name}"></TextBox>
                                    <TextBlock Width="250" Grid.Column="1" Visibility="{Binding ShowNormalView}" Text="{Binding StartDateTime.DateTimePrettyString}"></TextBlock>
                                    <DockPanel Width="250" Grid.Column="1" Visibility="{Binding ShowEditableView}">
                                        <DatePicker SelectedDateFormat="Short" Text="{Binding StartDateTime.Date, Mode=TwoWay}"></DatePicker>
                                        <ComboBox ItemsSource="{Binding StartDateTime.ListOfValidHours}" SelectedItem="{Binding StartDateTime.Hour}"></ComboBox>
                                        <ComboBox ItemsSource="{Binding StartDateTime.ListOfValidMinutesAndSeconds}" SelectedItem="{Binding StartDateTime.Minute}"></ComboBox>
                                        <ComboBox ItemsSource="{Binding StartDateTime.ListOfValidMinutesAndSeconds}" SelectedItem="{Binding StartDateTime.Second}"></ComboBox>
                                    </DockPanel>
                                    <TextBlock Grid.Column="2" Text=" - "></TextBlock>
                                    <TextBlock Width="250" Grid.Column="2" Visibility="{Binding ShowNormalView}" Text="{Binding EndDateTime.DateTimePrettyString}"></TextBlock>
                                    <DockPanel Width="250" Grid.Column="2" Visibility="{Binding ShowEditableView}">
                                        <DatePicker SelectedDateFormat="Short" Text="{Binding EndDateTime.Date, Mode=TwoWay}"></DatePicker>
                                        <ComboBox ItemsSource="{Binding EndDateTime.ListOfValidHours}" SelectedItem="{Binding EndDateTime.Hour}"></ComboBox>
                                        <ComboBox ItemsSource="{Binding EndDateTime.ListOfValidMinutesAndSeconds}" SelectedItem="{Binding EndDateTime.Minute}"></ComboBox>
                                        <ComboBox ItemsSource="{Binding EndDateTime.ListOfValidMinutesAndSeconds}" SelectedItem="{Binding EndDateTime.Second}"></ComboBox>
                                    </DockPanel>
                                    <DockPanel Grid.Column="1" Visibility="{Binding ShowNormalView}">
                                        <TextBlock Text="{Binding StartDateTime.DateTimePrettyString}"></TextBlock>
                                        <TextBlock Text=" - "></TextBlock>
                                        <TextBlock Text="{Binding EndDateTime.DateTimePrettyString}"></TextBlock>
                                    </DockPanel>
                                    <CheckBox Grid.Column="4" Content="Edit" IsChecked="{Binding Edit}"></CheckBox>
                                    <DockPanel Grid.Column="4">
                                        <Button Width="30" Content="✎" Click="btnEventData_Click"></Button>
                                        <Button Width="30" Content="🗑" Click="btnEventData_Click"></Button>
                                    </DockPanel>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </ScrollViewer>
            </Grid>-->
        </TabItem>
    </TabControl>

</Window>
